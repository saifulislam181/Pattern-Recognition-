# -*- coding: utf-8 -*-
"""Bonus.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1tWdtQ9QTP3QXZ3MtJxbcFpNtrTzA1QXM
"""

import numpy as np
import math
import random
import pandas as pd
import sys
from sklearn import preprocessing
from sklearn.metrics import f1_score
from sklearn.metrics import precision_score
from sklearn.metrics import recall_score
from sklearn.metrics import accuracy_score
from sklearn.model_selection import train_test_split
from sklearn.tree import DecisionTreeClassifier

data = pd.read_csv("data.csv")

x = data.loc[:, data.columns != "Churn"]  
y = data.iloc[:, ].Churn

from collections import Counter
Counter(data["Churn"])

from sklearn.preprocessing import LabelEncoder

le = LabelEncoder()

data['Churn'].unique()

le = preprocessing.LabelEncoder()
for col in data.columns:
    data[col] = le.fit_transform(data[col])

data.tail()

data.dropna(how="all",inplace=True)

data.tail()

data.head()

data.dropna()

x = data.loc[:, data.columns != "Churn"]  
y = data.iloc[:, ].Churn

from collections import Counter
Counter(data["Churn"])

x_train, x_test, y_train, y_test= train_test_split(x, y, test_size= 0.25)

from sklearn.preprocessing import StandardScaler    
st_x= StandardScaler()  
x_train= st_x.fit_transform(x_train)    
x_test= st_x.transform(x_test)

classifier= DecisionTreeClassifier(criterion='entropy', random_state=0)  
classifier.fit(x_train, y_train)

y_pred= classifier.predict(x_test)

print("Accuracy Score : ",accuracy_score(y_test,y_pred)*100,"%")
print("Precision Score : ",precision_score(y_test,y_pred)*100,"%")
print("Recall Score : ",recall_score(y_test,y_pred)*100,"%")
print("F1 Score : ",f1_score(y_test,y_pred)*100,"%")